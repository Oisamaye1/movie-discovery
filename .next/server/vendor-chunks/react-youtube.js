"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-youtube";
exports.ids = ["vendor-chunks/react-youtube"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-youtube/dist/YouTube.js":
/*!****************************************************!*\
  !*** ./node_modules/react-youtube/dist/YouTube.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/YouTube.tsx\nvar YouTube_exports = {};\n__export(YouTube_exports, {\n  default: () => YouTube_default\n});\nmodule.exports = __toCommonJS(YouTube_exports);\nvar import_prop_types = __toESM(__webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\"));\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar import_fast_deep_equal = __toESM(__webpack_require__(/*! fast-deep-equal */ \"(ssr)/./node_modules/fast-deep-equal/index.js\"));\nvar import_youtube_player = __toESM(__webpack_require__(/*! youtube-player */ \"(ssr)/./node_modules/youtube-player/dist/index.js\"));\nfunction shouldUpdateVideo(prevProps, props) {\n  var _a, _b;\n  if (prevProps.videoId !== props.videoId) {\n    return true;\n  }\n  const prevVars = ((_a = prevProps.opts) == null ? void 0 : _a.playerVars) || {};\n  const vars = ((_b = props.opts) == null ? void 0 : _b.playerVars) || {};\n  return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\nfunction filterResetOptions(opts = {}) {\n  return __spreadProps(__spreadValues({}, opts), {\n    height: 0,\n    width: 0,\n    playerVars: __spreadProps(__spreadValues({}, opts.playerVars), {\n      autoplay: 0,\n      start: 0,\n      end: 0\n    })\n  });\n}\nfunction shouldResetPlayer(prevProps, props) {\n  return prevProps.videoId !== props.videoId || !(0, import_fast_deep_equal.default)(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));\n}\nfunction shouldUpdatePlayer(prevProps, props) {\n  var _a, _b, _c, _d;\n  return prevProps.id !== props.id || prevProps.className !== props.className || ((_a = prevProps.opts) == null ? void 0 : _a.width) !== ((_b = props.opts) == null ? void 0 : _b.width) || ((_c = prevProps.opts) == null ? void 0 : _c.height) !== ((_d = props.opts) == null ? void 0 : _d.height) || prevProps.iframeClassName !== props.iframeClassName || prevProps.title !== props.title;\n}\nvar defaultProps = {\n  videoId: \"\",\n  id: \"\",\n  className: \"\",\n  iframeClassName: \"\",\n  style: {},\n  title: \"\",\n  loading: void 0,\n  opts: {},\n  onReady: () => {\n  },\n  onError: () => {\n  },\n  onPlay: () => {\n  },\n  onPause: () => {\n  },\n  onEnd: () => {\n  },\n  onStateChange: () => {\n  },\n  onPlaybackRateChange: () => {\n  },\n  onPlaybackQualityChange: () => {\n  }\n};\nvar propTypes = {\n  videoId: import_prop_types.default.string,\n  id: import_prop_types.default.string,\n  className: import_prop_types.default.string,\n  iframeClassName: import_prop_types.default.string,\n  style: import_prop_types.default.object,\n  title: import_prop_types.default.string,\n  loading: import_prop_types.default.oneOf([\"lazy\", \"eager\"]),\n  opts: import_prop_types.default.objectOf(import_prop_types.default.any),\n  onReady: import_prop_types.default.func,\n  onError: import_prop_types.default.func,\n  onPlay: import_prop_types.default.func,\n  onPause: import_prop_types.default.func,\n  onEnd: import_prop_types.default.func,\n  onStateChange: import_prop_types.default.func,\n  onPlaybackRateChange: import_prop_types.default.func,\n  onPlaybackQualityChange: import_prop_types.default.func\n};\nvar _YouTube = class extends import_react.default.Component {\n  constructor(props) {\n    super(props);\n    this.destroyPlayerPromise = void 0;\n    this.onPlayerReady = (event) => {\n      var _a, _b;\n      return (_b = (_a = this.props).onReady) == null ? void 0 : _b.call(_a, event);\n    };\n    this.onPlayerError = (event) => {\n      var _a, _b;\n      return (_b = (_a = this.props).onError) == null ? void 0 : _b.call(_a, event);\n    };\n    this.onPlayerStateChange = (event) => {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      (_b = (_a = this.props).onStateChange) == null ? void 0 : _b.call(_a, event);\n      switch (event.data) {\n        case _YouTube.PlayerState.ENDED:\n          (_d = (_c = this.props).onEnd) == null ? void 0 : _d.call(_c, event);\n          break;\n        case _YouTube.PlayerState.PLAYING:\n          (_f = (_e = this.props).onPlay) == null ? void 0 : _f.call(_e, event);\n          break;\n        case _YouTube.PlayerState.PAUSED:\n          (_h = (_g = this.props).onPause) == null ? void 0 : _h.call(_g, event);\n          break;\n        default:\n      }\n    };\n    this.onPlayerPlaybackRateChange = (event) => {\n      var _a, _b;\n      return (_b = (_a = this.props).onPlaybackRateChange) == null ? void 0 : _b.call(_a, event);\n    };\n    this.onPlayerPlaybackQualityChange = (event) => {\n      var _a, _b;\n      return (_b = (_a = this.props).onPlaybackQualityChange) == null ? void 0 : _b.call(_a, event);\n    };\n    this.destroyPlayer = () => {\n      if (this.internalPlayer) {\n        this.destroyPlayerPromise = this.internalPlayer.destroy().then(() => this.destroyPlayerPromise = void 0);\n        return this.destroyPlayerPromise;\n      }\n      return Promise.resolve();\n    };\n    this.createPlayer = () => {\n      if (typeof document === \"undefined\")\n        return;\n      if (this.destroyPlayerPromise) {\n        this.destroyPlayerPromise.then(this.createPlayer);\n        return;\n      }\n      const playerOpts = __spreadProps(__spreadValues({}, this.props.opts), {\n        videoId: this.props.videoId\n      });\n      this.internalPlayer = (0, import_youtube_player.default)(this.container, playerOpts);\n      this.internalPlayer.on(\"ready\", this.onPlayerReady);\n      this.internalPlayer.on(\"error\", this.onPlayerError);\n      this.internalPlayer.on(\"stateChange\", this.onPlayerStateChange);\n      this.internalPlayer.on(\"playbackRateChange\", this.onPlayerPlaybackRateChange);\n      this.internalPlayer.on(\"playbackQualityChange\", this.onPlayerPlaybackQualityChange);\n      if (this.props.title || this.props.loading) {\n        this.internalPlayer.getIframe().then((iframe) => {\n          if (this.props.title)\n            iframe.setAttribute(\"title\", this.props.title);\n          if (this.props.loading)\n            iframe.setAttribute(\"loading\", this.props.loading);\n        });\n      }\n    };\n    this.resetPlayer = () => this.destroyPlayer().then(this.createPlayer);\n    this.updatePlayer = () => {\n      var _a;\n      (_a = this.internalPlayer) == null ? void 0 : _a.getIframe().then((iframe) => {\n        if (this.props.id)\n          iframe.setAttribute(\"id\", this.props.id);\n        else\n          iframe.removeAttribute(\"id\");\n        if (this.props.iframeClassName)\n          iframe.setAttribute(\"class\", this.props.iframeClassName);\n        else\n          iframe.removeAttribute(\"class\");\n        if (this.props.opts && this.props.opts.width)\n          iframe.setAttribute(\"width\", this.props.opts.width.toString());\n        else\n          iframe.removeAttribute(\"width\");\n        if (this.props.opts && this.props.opts.height)\n          iframe.setAttribute(\"height\", this.props.opts.height.toString());\n        else\n          iframe.removeAttribute(\"height\");\n        if (this.props.title)\n          iframe.setAttribute(\"title\", this.props.title);\n        else\n          iframe.setAttribute(\"title\", \"YouTube video player\");\n        if (this.props.loading)\n          iframe.setAttribute(\"loading\", this.props.loading);\n        else\n          iframe.removeAttribute(\"loading\");\n      });\n    };\n    this.getInternalPlayer = () => {\n      return this.internalPlayer;\n    };\n    this.updateVideo = () => {\n      var _a, _b, _c, _d;\n      if (typeof this.props.videoId === \"undefined\" || this.props.videoId === null) {\n        (_a = this.internalPlayer) == null ? void 0 : _a.stopVideo();\n        return;\n      }\n      let autoplay = false;\n      const opts = {\n        videoId: this.props.videoId\n      };\n      if ((_b = this.props.opts) == null ? void 0 : _b.playerVars) {\n        autoplay = this.props.opts.playerVars.autoplay === 1;\n        if (\"start\" in this.props.opts.playerVars) {\n          opts.startSeconds = this.props.opts.playerVars.start;\n        }\n        if (\"end\" in this.props.opts.playerVars) {\n          opts.endSeconds = this.props.opts.playerVars.end;\n        }\n      }\n      if (autoplay) {\n        (_c = this.internalPlayer) == null ? void 0 : _c.loadVideoById(opts);\n        return;\n      }\n      (_d = this.internalPlayer) == null ? void 0 : _d.cueVideoById(opts);\n    };\n    this.refContainer = (container) => {\n      this.container = container;\n    };\n    this.container = null;\n    this.internalPlayer = null;\n  }\n  componentDidMount() {\n    this.createPlayer();\n  }\n  componentDidUpdate(prevProps) {\n    return __async(this, null, function* () {\n      if (shouldUpdatePlayer(prevProps, this.props)) {\n        this.updatePlayer();\n      }\n      if (shouldResetPlayer(prevProps, this.props)) {\n        yield this.resetPlayer();\n      }\n      if (shouldUpdateVideo(prevProps, this.props)) {\n        this.updateVideo();\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.destroyPlayer();\n  }\n  render() {\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", {\n      className: this.props.className,\n      style: this.props.style\n    }, /* @__PURE__ */ import_react.default.createElement(\"div\", {\n      id: this.props.id,\n      className: this.props.iframeClassName,\n      ref: this.refContainer\n    }));\n  }\n};\nvar YouTube = _YouTube;\nYouTube.propTypes = propTypes;\nYouTube.defaultProps = defaultProps;\nYouTube.PlayerState = {\n  UNSTARTED: -1,\n  ENDED: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  BUFFERING: 3,\n  CUED: 5\n};\nvar YouTube_default = YouTube;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceMappingURL=YouTube.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-youtube/dist/YouTube.js\n");

/***/ })

};
;