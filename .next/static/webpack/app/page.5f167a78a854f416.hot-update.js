"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/tmdb.ts":
/*!*********************!*\
  !*** ./lib/tmdb.ts ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDiscoverMovies: function() { return /* binding */ getDiscoverMovies; },\n/* harmony export */   getGenres: function() { return /* binding */ getGenres; },\n/* harmony export */   getMovieDetails: function() { return /* binding */ getMovieDetails; },\n/* harmony export */   searchMovies: function() { return /* binding */ searchMovies; }\n/* harmony export */ });\nconst API_KEY = \"501c878c72ae3bba87af476a081f0cd7\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst getDiscoverMovies = async function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, sortBy = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"popularity.desc\", genre = arguments.length > 2 ? arguments[2] : void 0;\n    try {\n        let url = \"\".concat(BASE_URL, \"/discover/movie?api_key=\").concat(API_KEY, \"&page=\").concat(page, \"&sort_by=\").concat(sortBy);\n        if (genre) url += \"&with_genres=\".concat(genre);\n        const res = await fetch(url);\n        if (!res.ok) throw new Error(\"HTTP error! status: \".concat(res.status));\n        const data = await res.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n        return [];\n    }\n};\nconst getGenres = async ()=>{\n    try {\n        const res = await fetch(\"\".concat(BASE_URL, \"/genre/movie/list?api_key=\").concat(API_KEY));\n        if (!res.ok) throw new Error(\"HTTP error! status: \".concat(res.status));\n        const data = await res.json();\n        return data.genres || [];\n    } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n        return [];\n    }\n};\nconst searchMovies = async function(query) {\n    let page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n    try {\n        const url = \"\".concat(BASE_URL, \"/search/movie?api_key=\").concat(API_KEY, \"&query=\").concat(encodeURIComponent(query), \"&page=\").concat(page);\n        const res = await fetch(url);\n        if (!res.ok) throw new Error(\"HTTP error! status: \".concat(res.status));\n        const data = await res.json();\n        return {\n            results: data.results || [],\n            totalPages: data.total_pages || 1\n        };\n    } catch (error) {\n        console.error(\"Error searching movies:\", error);\n        return {\n            results: [],\n            totalPages: 1\n        };\n    }\n};\nconst getMovieDetails = async (id)=>{\n    try {\n        const res = await fetch(\"\".concat(BASE_URL, \"/movie/\").concat(id, \"?api_key=\").concat(API_KEY, \"&append_to_response=videos\"));\n        if (!res.ok) throw new Error(\"HTTP error! status: \".concat(res.status));\n        return await res.json();\n    } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi90bWRiLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQSxVQUFVO0FBQ2hCLE1BQU1DLFdBQVc7QUFFVixNQUFNQyxvQkFBb0I7UUFDL0JDLHdFQUFlLEdBQ2ZDLDBFQUFpQixtQkFDakJDO0lBRUEsSUFBSTtRQUNGLElBQUlDLE1BQU0sR0FBc0NOLE9BQW5DQyxVQUFTLDRCQUEwQ0UsT0FBaEJILFNBQVEsVUFBd0JJLE9BQWhCRCxNQUFLLGFBQWtCLE9BQVBDO1FBQ2hGLElBQUlDLE9BQU9DLE9BQU8sZ0JBQXNCLE9BQU5EO1FBRWxDLE1BQU1FLE1BQU0sTUFBTUMsTUFBTUY7UUFDeEIsSUFBSSxDQUFDQyxJQUFJRSxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNLHVCQUFrQyxPQUFYSCxJQUFJSSxNQUFNO1FBQzlELE1BQU1DLE9BQU8sTUFBTUwsSUFBSU0sSUFBSTtRQUMzQixPQUFPRCxLQUFLRSxPQUFPLElBQUksRUFBRTtJQUMzQixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDBCQUEwQkE7UUFDeEMsT0FBTyxFQUFFO0lBQ1g7QUFDRixFQUFDO0FBRU0sTUFBTUUsWUFBWTtJQUN2QixJQUFJO1FBQ0YsTUFBTVYsTUFBTSxNQUFNQyxNQUFNLEdBQXdDUixPQUFyQ0MsVUFBUyw4QkFBb0MsT0FBUkQ7UUFDaEUsSUFBSSxDQUFDTyxJQUFJRSxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNLHVCQUFrQyxPQUFYSCxJQUFJSSxNQUFNO1FBQzlELE1BQU1DLE9BQU8sTUFBTUwsSUFBSU0sSUFBSTtRQUMzQixPQUFPRCxLQUFLTSxNQUFNLElBQUksRUFBRTtJQUMxQixFQUFFLE9BQU9ILE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDBCQUEwQkE7UUFDeEMsT0FBTyxFQUFFO0lBQ1g7QUFDRixFQUFDO0FBRU0sTUFBTUksZUFBZSxlQUMxQkM7UUFDQWpCLHdFQUFlO0lBRWYsSUFBSTtRQUNGLE1BQU1HLE1BQU0sR0FBb0NOLE9BQWpDQyxVQUFTLDBCQUF5Q29CLE9BQWpCckIsU0FBUSxXQUEyQ0csT0FBbENrQixtQkFBbUJELFFBQU8sVUFBYSxPQUFMakI7UUFDbkcsTUFBTUksTUFBTSxNQUFNQyxNQUFNRjtRQUN4QixJQUFJLENBQUNDLElBQUlFLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU0sdUJBQWtDLE9BQVhILElBQUlJLE1BQU07UUFDOUQsTUFBTUMsT0FBTyxNQUFNTCxJQUFJTSxJQUFJO1FBQzNCLE9BQU87WUFDTEMsU0FBU0YsS0FBS0UsT0FBTyxJQUFJLEVBQUU7WUFDM0JRLFlBQVlWLEtBQUtXLFdBQVcsSUFBSTtRQUNsQztJQUNGLEVBQUUsT0FBT1IsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxPQUFPO1lBQ0xELFNBQVMsRUFBRTtZQUNYUSxZQUFZO1FBQ2Q7SUFDRjtBQUNGLEVBQUM7QUFFTSxNQUFNRSxrQkFBa0IsT0FBT0M7SUFDcEMsSUFBSTtRQUNGLE1BQU1sQixNQUFNLE1BQU1DLE1BQU0sR0FBcUJpQixPQUFsQnhCLFVBQVMsV0FBdUJELE9BQWR5QixJQUFHLGFBQW1CLE9BQVJ6QixTQUFRO1FBQ25FLElBQUksQ0FBQ08sSUFBSUUsRUFBRSxFQUFFLE1BQU0sSUFBSUMsTUFBTSx1QkFBa0MsT0FBWEgsSUFBSUksTUFBTTtRQUM5RCxPQUFPLE1BQU1KLElBQUlNLElBQUk7SUFDdkIsRUFBRSxPQUFPRSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxpQ0FBaUNBO1FBQy9DLE9BQU87SUFDVDtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3RtZGIudHM/MDI2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUElfS0VZID0gJzUwMWM4NzhjNzJhZTNiYmE4N2FmNDc2YTA4MWYwY2Q3J1xuY29uc3QgQkFTRV9VUkwgPSAnaHR0cHM6Ly9hcGkudGhlbW92aWVkYi5vcmcvMydcblxuZXhwb3J0IGNvbnN0IGdldERpc2NvdmVyTW92aWVzID0gYXN5bmMgKFxuICBwYWdlOiBudW1iZXIgPSAxLCBcbiAgc29ydEJ5OiBzdHJpbmcgPSAncG9wdWxhcml0eS5kZXNjJywgXG4gIGdlbnJlPzogc3RyaW5nXG4pOiBQcm9taXNlPGFueVtdPiA9PiB7XG4gIHRyeSB7XG4gICAgbGV0IHVybCA9IGAke0JBU0VfVVJMfS9kaXNjb3Zlci9tb3ZpZT9hcGlfa2V5PSR7QVBJX0tFWX0mcGFnZT0ke3BhZ2V9JnNvcnRfYnk9JHtzb3J0Qnl9YFxuICAgIGlmIChnZW5yZSkgdXJsICs9IGAmd2l0aF9nZW5yZXM9JHtnZW5yZX1gXG4gICAgXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsKVxuICAgIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIHN0YXR1czogJHtyZXMuc3RhdHVzfWApXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKClcbiAgICByZXR1cm4gZGF0YS5yZXN1bHRzIHx8IFtdXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgbW92aWVzOicsIGVycm9yKVxuICAgIHJldHVybiBbXVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBnZXRHZW5yZXMgPSBhc3luYyAoKTogUHJvbWlzZTxhbnlbXT4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0JBU0VfVVJMfS9nZW5yZS9tb3ZpZS9saXN0P2FwaV9rZXk9JHtBUElfS0VZfWApXG4gICAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlcy5zdGF0dXN9YClcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKVxuICAgIHJldHVybiBkYXRhLmdlbnJlcyB8fCBbXVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGdlbnJlczonLCBlcnJvcilcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG5leHBvcnQgY29uc3Qgc2VhcmNoTW92aWVzID0gYXN5bmMgKFxuICBxdWVyeTogc3RyaW5nLCBcbiAgcGFnZTogbnVtYmVyID0gMVxuKTogUHJvbWlzZTx7cmVzdWx0czogYW55W10sIHRvdGFsUGFnZXM6IG51bWJlcn0+ID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB1cmwgPSBgJHtCQVNFX1VSTH0vc2VhcmNoL21vdmllP2FwaV9rZXk9JHtBUElfS0VZfSZxdWVyeT0ke2VuY29kZVVSSUNvbXBvbmVudChxdWVyeSl9JnBhZ2U9JHtwYWdlfWBcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCh1cmwpXG4gICAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlcy5zdGF0dXN9YClcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKVxuICAgIHJldHVybiB7XG4gICAgICByZXN1bHRzOiBkYXRhLnJlc3VsdHMgfHwgW10sXG4gICAgICB0b3RhbFBhZ2VzOiBkYXRhLnRvdGFsX3BhZ2VzIHx8IDFcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VhcmNoaW5nIG1vdmllczonLCBlcnJvcilcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdWx0czogW10sXG4gICAgICB0b3RhbFBhZ2VzOiAxXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBnZXRNb3ZpZURldGFpbHMgPSBhc3luYyAoaWQ6IHN0cmluZyB8IG51bWJlcik6IFByb21pc2U8YW55PiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QkFTRV9VUkx9L21vdmllLyR7aWR9P2FwaV9rZXk9JHtBUElfS0VZfSZhcHBlbmRfdG9fcmVzcG9uc2U9dmlkZW9zYClcbiAgICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBzdGF0dXM6ICR7cmVzLnN0YXR1c31gKVxuICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgbW92aWUgZGV0YWlsczonLCBlcnJvcilcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG4iXSwibmFtZXMiOlsiQVBJX0tFWSIsIkJBU0VfVVJMIiwiZ2V0RGlzY292ZXJNb3ZpZXMiLCJwYWdlIiwic29ydEJ5IiwiZ2VucmUiLCJ1cmwiLCJyZXMiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJkYXRhIiwianNvbiIsInJlc3VsdHMiLCJlcnJvciIsImNvbnNvbGUiLCJnZXRHZW5yZXMiLCJnZW5yZXMiLCJzZWFyY2hNb3ZpZXMiLCJxdWVyeSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRvdGFsUGFnZXMiLCJ0b3RhbF9wYWdlcyIsImdldE1vdmllRGV0YWlscyIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/tmdb.ts\n"));

/***/ })

});